SHELL   = /bin/sh

#computer_os:=   $(shell uname -s)
#computer_arch:= $(shell uname -m)
#computer_name:= $(shell uname -n)

ifeq ($(computer_arch),i686)
endif

ifeq ($(computer_arch),ia64)
endif

ifneq (, $(finstring, jaguar, $(computer_name)))
endif   # --- jaguar end --- #

# --- franklin start --- #
ifeq ($(shell uname -n | cut -c-6),hopper)
	ifeq ($(shell echo ${NTCCHOME} | cut -c41-43),pgi)
		CFOPTS = -r8 -Msave -Kieee -pc 64 -O -I${NTCCINC} -I${NTCCMOD}
	else
		CFOPTS = -save -ftz -O -I${NTCCINC} -I${NTCCMOD}
	endif
endif   # --- jaguar hopper --- #

# --- pppl start --- #
ifeq ($(shell uname -n | cut -c-4),flux)
	COMPILE = $(FC)
	ifeq "$(findstring lfc,$(FC))" "lfc"
		CFOPTS =  --sav --o2  -I${TRANSP_MOD}
	endif 
	ifeq "$(findstring pathscale,$(FC))" "pathscale"
		CFOPTS =  -static-data -I${TRANSP_MOD} -module ../object
	endif 
	#ifeq "$(findstring intel,$(FC))" "intel"
		#CFOPTS = -save -ftz -check bounds -I${TRANSP_MOD}
		CFOPTS = -save -ftz -I${PLASMA_STATE_HOME}
		FLAGS= $(CFOPTS)
	#endif
endif # --- pppl end --- #

LINK    = ar -ruv
LISTS   = ../list

#Modules with NO external dependency
OBJ0 = 
#Modules which depend ONLY on kind_spec
OBJ1 = 
#Modules which depend ONLY on 
OBJ2 = 
#Modules with more complicated dependence
OBJ3 = 
OBJA = $(OBJ0) $(OBJ1) $(OBJ2) $(OBJ3)
COBJ = 

#Defines vsource.Sub (list of source files.o)
include $(LISTS)/source.lst
include $(LISTS)/source2.lst
include $(LISTS)/module.lst

all : liblsc.a  mvliblsc

liblsc.a : $(vmodule.Sub) $(vsource.Sub) $(vsource2.Sub) $(OBJA) $(COBJ)
	$(LINK) $@ $(vmodule.Sub) $(vsource.Sub) $(vsource2.Sub) $(OBJA) $(COBJ)

#Compile Fortran source modules
$(OBJ0) : ${$(@):.o=.f90}
	$(COMPILE) $(FLAGS) -c $(@:.o=.f90)
$(OBJ1) : ${$(@):.o=.f90} 
	$(COMPILE) $(FLAGS) -c $(@:.o=.f90)
$(OBJ2) : ${$(@):.o=.f90} 
	$(COMPILE) $(FLAGS) -c $(@:.o=.f90)
$(OBJ3) : ${$(@):.o=.f90} 
	$(COMPILE) $(FLAGS) -c $(@:.o=.f90)

#Compile module .o files
$(vmodule.Sub) : ${$(@):.o=.f90} $(OBJA)
#	$(COMPILE) $(FLAGS) -c $(@:.o=.f90) 

#Compile C source .o files
#$(COBJ) : ${$(@):.o=.c}
#        cc $(FLAGS_C) -I../source -c $(@:.o=.c)

#Compile Fortran source .o files
$(vsource.Sub) : ${$(@):.o=.f90} $(OBJA) $(vmodule.Sub)
$(vsource2.Sub) : ${$(@):.o=.f90} $(OBJA) $(vmodule.Sub)
#	$(COMPILE) $(FLAGS) -c $(@:.o=.f90)

%.o: %.f
	$(COMPILE) $(FLAGS) -c -o $@ $<

%.o: %.F
	$(COMPILE) $(FLAGS) -c -o $@ $<

%.o: %.f90
	echo $(shell pwd)
	$(COMPILE) $(FLAGS) -c -o $@ $<

%.o: %.F90
	$(COMPILE) $(FLAGS) -c -o $@ $<

mvliblsc:
	mv liblsc.a $(SRCDIR) 
