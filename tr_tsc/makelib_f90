SHELL   = /bin/sh

#computer_os:=   $(shell uname -s)
#computer_arch:= $(shell uname -m)
#computer_name:= $(shell uname -n)

ifeq ($(shell uname -n | cut -c-4),cori)
# --- cori start --- #
COMPILE = ftn
C_COMPILE = cc
CC_COMPILE = CC
ifeq ($(PE_ENV),PGI)   # Using PGI compiler on cori
	CFOPTS = -Msave -Kieee -pc 64 -O -I${NTCCINC} -I${NTCCMOD}
else
	ifeq ($(PE_ENV),PATHSCALE)   # Using PATHSCALE compiler on cori
		CFOPTS =  -static-data -O -I${NTCCINC} -I${NTCCMOD}
		CFOPTS =  -static-data -g -I${NTCCINC} -I${NTCCMOD}
	else #default: INTEl compiler on cori
		CFOPTS =  -save -ftz -O -I${NTCCINC} -I${NTCCMOD}
	endif
endif

else
# --- pppl start --- #
COMPILE = $(F90)
NTCCMOD = ${NTCC_ROOT}/mod
NETCDFMOD = ${NETCDFHOME}/include
TRANSP_MOD = ${NTCC_ROOT}/mod
ifeq "$(findstring intel,$(F90HOME))" "intel"
	CFOPTS = -save -ftz -I${TRANSP_MOD} -I/p/swim/jchen/TSC/INTEL2019/mod
endif 

endif # end of pppl

ifeq "$(findstring intel,$(F90HOME))" "intel"
FLAGS= $(CFOPTS) \
	-cpp -DOLD -DPARTIAL_PLASMA_STATE -DxI_HAVE_MPI -DxI_HAVE_MPI_DEBUG -I${MPIHOME}/include #-g
endif
ifeq "$(findstring pathscale,$(F95HOME))" "pathscale"
FLAGS= $(CFOPTS) \
	-cpp -DOLD -DPARTIAL_PLASMA_STATE -DxI_HAVE_MPI -DxI_HAVE_MPI_DEBUG -I${MPIHOME}/include #-g
endif

LINK    = ar -ruv
LISTS   = ../list

#Modules with NO external dependency
OBJ0 = 
#Modules which depend ONLY on kind_spec
OBJ1 = 
#Modules which depend ONLY on 
OBJ2 = 
#Modules with more complicated dependence
OBJ3 = 
OBJA = $(OBJ0) $(OBJ1) $(OBJ2) $(OBJ3)
COBJ = 

#Defines vsource.Sub (list of source files.o)
include $(LISTS)/source.lst
include $(LISTS)/module.lst

all : libtrtsc.a  mvlibtrtsc

libtrtsc.a : $(vmodule.Sub) $(vsource.Sub) 
	$(LINK) $@ $(vmodule.Sub) $(vsource.Sub) glf23_mod.o 

#Compile Fortran source modules
$(OBJ0) : ${$(@):.o=.f}
	$(COMPILE) $(FLAGS) -c $(@:.o=.f)
$(OBJ1) : ${$(@):.o=.f} 
	$(COMPILE) $(FLAGS) -c $(@:.o=.f)
$(OBJ2) : ${$(@):.o=.f} 
	$(COMPILE) $(FLAGS) -c $(@:.o=.f)
$(OBJ3) : ${$(@):.o=.f} 
	$(COMPILE) $(FLAGS) -c $(@:.o=.f)

#Compile module .o files
$(vmodule.Sub) : ${$(@):.o=.f} $()
#	$(COMPILE) $(FLAGS) -c $(@:.o=.f90) 

#Compile C source .o files
#$(COBJ) : ${$(@):.o=.c}
#        cc $(FLAGS_C) -I../source -c $(@:.o=.c)

#Compile Fortran source .o files
$(vsource.Sub) : ${$(@):.o=.f} $(vmodule.Sub) glf23_mod.o
#	$(COMPILE) $(FLAGS) --chk -c $(@:.o=.f90)

%.o: %.f
	$(COMPILE) $(FLAGS) -c -o $@ $<

%.o: %.F
	$(COMPILE) $(FLAGS) -c -o $@ $<

%.o: %.f90
	$(COMPILE) $(FLAGS) -c -o $@ $<

%.o: %.F90
	$(COMPILE) $(FLAGS) -c -o $@ $<

#glf23_mod.o : $(vmodule.Sub)
#	$(COMPILE) $(FLAGS) -c $(@:.o=.F)

#tsc.o : $(vmodule.Sub)
#	$(COMPILE) $(FLAGS) -c $(@:.o=.F90)
#
#tsc_fmcfm_transport_mod.o : $(vmodule.Sub)
#	$(COMPILE) $(FLAGS) -c $(@:.o=.F90)
#
#trtscm.o : $(vmodule.Sub)
#	$(COMPILE) $(FLAGS) -c $(@:.o=.F90)

mvlibtrtsc:
	mv libtrtsc.a $(SRCDIR)
