      subroutine reval(psv,itype,jsurf,rval,rpval,ig,jg)
!.....number 8.60
!
      USE CLINAM
      USE SAPROP
      USE SCR3
      IMPLICIT NONE
      INTEGER, PARAMETER :: R8=SELECTED_REAL_KIND(12,100)
!
!.....for itype=1  evaluate from analytic function
!.......  itype=2 evaluate from mu profile
!============
! idecl:  explicitize implicit INTEGER declarations:
      INTEGER itype,ig,jg,n1,n2,jv,j,lval,lv,lm
      INTEGER jsurf
!============
! idecl:  explicitize implicit REAL declarations:
      REAL*8 rval,rpval,psv,phiarg,phitil,phiargc,fac1,frac,psve,psl
!============
      if(iexvc(ig,jg).gt.0 .or. iexs(ig,jg).eq.1)go to 40
      if(psv.ge.psilim) go to 40
      if(itype.eq.0) itype=1
      if(itype.le.0) go to 100
      if(itype.gt.2) go to 100
      if(jsurf.eq.1) go to 10
      if(ifunc.eq.6) go to 110
!
      n1 = 1
      n2 = 2
      if(acoef(3012) .ne. 0._R8) then
      n1=int(acoef(3013))
      n2=int(acoef(3014))
      endif
      phiarg = 1.0_R8
      if(psv.gt.psimin)                                                  &  
     &phiarg = 1._R8- ((psv-psimin)*delpsi)**betar
      phitil =  (psv-psimin)*delpsi
      rval = r0*phiarg**alphar + acoef(881)*r0                           &  
     & + acoef(893)*r0*phitil**n2 * (1._R8- phitil)**n1
!
      phiargc = 0._R8
      if(psv.gt.psimin) phiargc = (psv-psimin)*delpsi
      fac1 = 1._R8
      if(betar.gt.1) fac1 = betar*phiargc**(betar-1._R8)
      rpval = -r0*alphar*delpsi*fac1
      if(alphar.ne.1._R8)                                                &  
     &rpval = -r0*alphar*delpsi*phiarg**(alphar-1._R8)*fac1
      rpval = rpval + acoef(893)*r0*                                     &  
     &(n2-(n2+n1)*phitil)*(1._R8-phitil)**(n1-1)                         &  
     &               *phitil**(n2-1)*delpsi
      if(iimp.le.1) return
!
      jv = 2
      frac = 1.0_R8
      if(psv.gt.xsv(2)) then
      do 15 j=3,npsit+1
      frac = (psv-xsv(j-1))/(xsv(j)-xsv(j-1))
      jv = j
      if(frac.ge.0.0_R8.and. frac.le.1.0_R8) go to 21
   15 continue
      frac = 1.0_R8
                        endif
   21 rval = frac*aneimp(jv)+(1._R8-frac)*aneimp(jv-1) + rval
!
      return
   10 continue
!
!.....get r from interpolating polynomial for surface averaged transport
      psve = max(psv,xsv(2))
      lval = 2
      do 20 lv=3,npsit
      lval = lv
      if(xsv(lval).gt.psve) go to 30
   20 continue
      go to 40
   30 continue
      lm = lval-1
      rval=asv(lm,4)+psve*(bsv(lm,4)+psve*(csv(lm,4)+psve*dsv(lm,4)))
      if(rval.lt. acoef(881)*r0) rval = acoef(881)*r0
      rpval = bsv(lm,4)+psve*(2._R8*csv(lm,4)+3._R8*dsv(lm,4)*psve)
      return
  110 continue
      psl =  (psv-psimin)*delpsi
!
!
!.....get r from interpolating polynomial for ifunc=6
      lval = 2
      do 120 lv=3,npsit6+1
      lval = lv
      if(xs6(lval).gt.psl) go to 130
  120 continue
      go to 40
  130 continue
      lm = lval-1
      rval=as6(lm,4)+psl*(bs6(lm,4)+psl*(cs6(lm,4)+psl*ds6(lm,4)))
      if(rval.lt. acoef(881)*r0) rval = acoef(881)*r0
      rpval = bs6(lm,4)+psl*(2._R8*cs6(lm,4)+3._R8*ds6(lm,4)*psl)
      return
   40 continue
!
!
!.....vacuum region
      rval = acoef(881)*r0
      rpval = 0._R8
      return
  100 continue
!.....error exit
      ineg=55
      rval = 0._R8
      rpval = 0._R8
      write(nout,1000) psv,psimin,psilim
 1000 format(" error in reval,psv,psimin,psilim=",1p3e12.4)
      return
      end
! 15Apr2005 fgtok -s r8_precision.sub "r8con.csh conversion"
